name: Pokemon CSV - Deploy

on:
  push:
    tags:
      - 'v*' # Trigger only on tags like v1.0.0

permissions:
  packages: write
  contents: write

jobs:
  # ✅ 1. Install & Lint (paralelo)
  lint:
    name: '🧹 Lint'
    runs-on: ubuntu-latest
    steps:
      - name: '⬇️ Checkout'
        uses: actions/checkout@v4

      - name: '🔧 Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: '📦 Install dependencies'
        run: npm ci

      - name: '🧹 Run Lint'
        run: npm run lint

  # ✅ 2. E2E Tests (paralelo)
  e2e:
    name: '🧪 E2E Tests'
    runs-on: ubuntu-latest
    env:
      REDIS_HOST: localhost
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: '⬇️ Checkout'
        uses: actions/checkout@v4

      - name: '🔧 Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: '📦 Install dependencies'
        run: npm ci

      - name: '📝 Create .env.test'
        run: |
          echo "REDIS_HOST=localhost" > .env.test
          echo "REDIS_PORT=6379" >> .env.test
          echo "CACHE_TTL=3600" >> .env.test

      - name: '🔄 Use Test env'
        run: cp .env.test .env

      - name: '🔌 Install redis-tools'
        run: sudo apt-get update && sudo apt-get install -y redis-tools

      - name: '🔗 Check Redis connection'
        run: redis-cli -h localhost ping

      - name: '🧪 Run E2E Tests'
        run: npm run test:e2e -- --detectOpenHandles

  # ✅ 3. Coverage (paralelo)
  coverage:
    name: '📊 Coverage'
    runs-on: ubuntu-latest
    needs: [lint, e2e]
    steps:
      - name: '⬇️ Checkout'
        uses: actions/checkout@v4

      - name: '🔧 Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: '📦 Install dependencies'
        run: npm ci

      - name: '📝 Create .env.test'
        run: |
          echo "REDIS_HOST=localhost" > .env.test
          echo "REDIS_PORT=6379" >> .env.test
          echo "CACHE_TTL=3600" >> .env.test

      - name: '🔄 Use Test env'
        run: cp .env.test .env

      - name: '🧪 Run Coverage'
        run: npm run test:cov

      - name: '⬆️ Upload Coverage Report'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage
          path: coverage/

      - name: '⬆️ Upload Coverage to Codecov'
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # ✅ 4. Docker Build & Push (solo si lint, e2e y coverage pasan)
  docker:
    name: '🐳 Docker Build & Push'
    runs-on: ubuntu-latest
    needs: [lint, e2e, coverage]
    steps:
      - name: '⬇️ Checkout'
        uses: actions/checkout@v4

      - name: '🔧 Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: '📦 Install dependencies'
        run: npm ci

      - name: '🔨 Set up Docker Buildx'
        uses: docker/setup-buildx-action@v3

      - name: '🔑 Log in to GHCR'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: '🏷️ Extract tag name'
        id: set_tag
        run: echo "tag_name=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: '🐳 Build Docker image'
        run: |
          TAG=${{ steps.set_tag.outputs.tag_name }}
          docker build -t ghcr.io/manuelentrena/pokemon-csv:$TAG -f docker/dockerfile.prod.yml .

      - name: '⬆️ Push Docker image'
        run: |
          TAG=${{ steps.set_tag.outputs.tag_name }}
          docker push ghcr.io/manuelentrena/pokemon-csv:$TAG

  # ✅ 5. GitHub Release (solo si docker pasa)
  release:
    name: '🚀 GitHub Release'
    runs-on: ubuntu-latest
    needs: [docker]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: '⬇️ Checkout'
        uses: actions/checkout@v4

      - name: '🔧 Setup Node'
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: '📦 Install auto-changelog'
        run: npm install -g auto-changelog

      - name: '📝 Generate Changelog'
        run: auto-changelog --commit-limit false -o CHANGELOG.md

      - name: '🚀 Create GitHub Release'
        uses: softprops/action-gh-release@v2
        with:
          body_path: ${{ github.workspace }}/CHANGELOG.md
          repository: manuelentrena/pokemon-csv
          token: ${{ secrets.REGISTRY_TOKEN }}
